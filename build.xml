<?xml version="1.0" encoding="UTF-8"?>
<project name="poker" basedir="." default="help">
	
	<property file="build.properties" />
	
	<path id="classpath.src">
		<pathelement location="${classes.dir}" />
	</path>
	
	<path id="classpath.test">
		<pathelement location="${test.classes.dir}" />
	</path>
	
	<path id="jars.all">
		<fileset dir="${thirdparty.libs}" casesensitive="yes">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<target name="clean">
		<echo>Cleaning the previous files</echo>
		<delete verbose = "true" dir = "${classes.dir}" />
		<delete verbose = "true" dir = "${test.classes.dir}" />
		<delete verbose = "true" dir = "${dist.dir}" />
	</target>
	
	<target name="compile" depends="clean">
		<echo>Compiling the source code</echo>
		<mkdir dir = "${classes.dir}" />
		<javac srcdir="src" destdir="${classes.dir}" debug="true" >
			<classpath refid="jars.all"/>
		</javac>
			
	</target>
	
	<target name="compile-test" depends="compile">
		<mkdir dir = "${test.classes.dir}" />
		<javac srcdir="test" destdir="${test.classes.dir}" debug="true">
			<classpath refid="classpath.src"/>
			<classpath refid="jars.all"/>
		</javac>
	</target>
	
	<target name="test" depends="compile-test">
		<echo>Running the test cases</echo>
		<mkdir dir="${test.data.dir}"/>
		<mkdir dir="${test.reports.dir}"/>
		<junit fork="on" haltonfailure="no" printsummary="off" showoutput="off" 
			    outputtoformatters="false" filtertrace="on" >
			<classpath refid="jars.all" />
			<classpath refid="classpath.src" />
			<classpath refid="classpath.test" />
			<batchtest fork="yes" todir="${test.data.dir}" >
				<formatter type="xml" />
				<fileset dir="test">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	
	<target name="package" depends="clean,compile">
		<echo>Packaging the JAR</echo>
		<mkdir dir = "${dist.dir}" />
		<jar destfile="${dist.dir}/${ant.project.name}.jar" 
			basedir="${classes.dir}" />
	</target>
	
	<target name="all" depends="clean,compile,package" 
		description="Clean work dirs, then compile and create a JAR"/>
	
	
	<target name="help">
		<echo>You can use the following targets:</echo>
		<echo> </echo>
		<echo>  help    : (default) Prints this message </echo>
		<echo>  all     : Cleans, compiles, and packages the JAR</echo>
		<echo>  clean   : Deletes work directories</echo>
		<echo>  compile : Compiles source code into class files</echo>
		<echo>  package : Packages artifacts into a deployable JAR</echo>
		<echo>  test    : Executes test cases</echo>
		<echo></echo>
	</target>
	
</project>